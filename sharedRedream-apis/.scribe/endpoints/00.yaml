name: 'Auth endpoints'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: register
    metadata:
      title: 'Handle a registration request for the application.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: Demo
        type: string
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: demo@demo.com
        type: email
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: password
        type: password
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
             "data": {
                 "id": 2,
                 "name": "Demo",
                 "email": "demo@demo.com",
                 "email_verified_at": null,
                 "created_at": "2022-04-25T06:21:47.000000Z",
                 "updated_at": "2022-04-25T06:21:47.000000Z"
             }
             "token": "3|tA8Ouhh1CWXJORVPHvUQvN0SFNZVGwvVbx2F3prb",
             "token_type": "Bearer"
          }
        headers: []
        description: '200'
      -
        status: 422
        content: |-
          {
             "message": "The given data was invalid.",
             "errors": {
                 "email": [
                     "The email field is required."
                 ]
             }
          }
        headers: []
        description: '422, Validation error'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: login
    metadata:
      title: 'Handle a login request to the application.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: demo@demo.com
        type: email
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: password
        type: password
        custom: []
    responses:
      -
        status: 422
        content: |-
          {
             "message": "The given data was invalid.",
             "errors": {
                 "email": [
                     "The email field is required."
                 ]
             }
          }
        headers: []
        description: '422, Validation error'
      -
        status: 401
        content: '{"error":"Wrong credentials","code":401}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: profile
    metadata:
      title: 'Show authenticated user info'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "id": 2,
              "name": "Demo",
              "email": "demo@demo.com",
              "balance": "150.00"
          }
        headers: []
        description: '200'
      -
        status: 404
        content: |-
          {
              "message": "Not Found"
          }
        headers: []
        description: '404, Not Found'
    responseFields: []
